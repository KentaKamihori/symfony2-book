...
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\HttpFoundation\ResponseHeaderBag;
use AppBundle\Entity\Inquiry;
use League\Csv\Writer;
...

/**
 * @Route("/search.{_format}",
 *      defaults={"_format": "html"},
 *      requirements={
 *         "_format": "html|csv",
 *     }
 * )
 */
public function indexAction(Request $request, $_format)
{
    ...
    $inquiryList = $inquiryRepository->findAllByKeyword($keyword);

    if ($_format == 'csv') {
        $response = new Response($this->createCsv($inquiryList));
        $d = $response->headers->makeDisposition(
            ResponseHeaderBag::DISPOSITION_ATTACHMENT,
            'inquiry_list.csv'
        );
        $response->headers->set('Content-Disposition', $d);

        return $response;
    }
    ...
}

private function createSearchForm()
{
    return $this->createFormBuilder()
        ->add('search', 'search')
        ->add('submit', 'button', [
            'label' => 'æ¤œç´¢',
        ])
        ->getForm();
}

private function createCsv($inquiryList)
{
    /** @var Writer $writer */
    $writer = Writer::createFromString('','');
    $writer->setNewline("\r\n");

    foreach ($inquiryList as $inquiry) {
        /** @var Inquiry $inquiry */
        $writer->insertOne([
            $inquiry->getId(),
            $inquiry->getName(),
            $inquiry->getEmail()
        ]);
    }

    return (string)$writer;
}
